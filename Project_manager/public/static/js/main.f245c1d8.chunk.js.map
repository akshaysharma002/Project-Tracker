{"version":3,"sources":["components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedOutLinks","className","to","connect","dispatch","signOut","getState","firebase","auth","then","type","props","onClick","profile","initials","state","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","createdAt","calendar","console","log","title","authorFirstName","authorLastName","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","class","CreateProject","handleChange","e","setState","target","value","handleSubmit","preventDefault","createProject","history","push","onSubmit","htmlFor","onChange","getFirebase","getFirestore","authorId","add","firstName","lastName","Date","catch","err","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","newUser","createUserWithEmailAndPassword","resp","doc","set","signUp","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","createFirestoreInstance","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f245c1d8.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pinklighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","import firebase from \"firebase\";\n\nexport const signIn = (credentials) => {\n  return (dispatch, getState) => {\n    //const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState) => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n\n  return (\n    <nav className=\"nav-wrappper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Project Tracker\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  //console.log(project);\n  const createdAt = project.createdAt\n    ? moment(project.createdAt.toDate()).calendar()\n    : \"2 sep\";\n  console.log(createdAt);\n  return (\n    <div className=\"card z-depth-0 project-summary \">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">{createdAt}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map((project) => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nclass Dashboard extends Component {\n  render() {\n    //console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications  notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: \"projects\",orderBy:['createdAt','desc']\n    },\n    {\n      collection: \"notifications\", limit: 3,orderBy:['time','desc']\n    },\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nfunction ProjectDetails(props) {\n  const { project, auth } = props;\n  console.log(project);\n  const createdAt = project.createdAt\n    ? moment(project.createdAt.toDate()).calendar()\n    : \"2 sep\";\n\n  if (!auth.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div class=\"card-action grey lighten-4 grey-text\">\n            <div>{project.authorFirstName}</div>\n            <div>{createdAt}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p> project is loading </p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  console.log(state);\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n\n    if (!auth.uid) {\n      return <Redirect to=\"signin\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Project Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              type=\"text\"\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    console.log(this.props);\n    const { authError, auth } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"Password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">\n              Login\n            </button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>Hello wrong</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"Password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}></Route>\n          <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  console.log(action.type);\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login Succesfull\");\n      return {\n        authError: null,\n      };\n    case \"LOGIN_ERROR\":\n      console.log(\"Login Unsuccesfull\");\n      return {\n        authError: \"Login Failed\",\n      };\n\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"sign out success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"sign up success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"sign up error\");\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n    projects:[\n        {id:'1' , title: 'help me find peach', content: 'blah blah'},\n        {id:'2' , title: 'help me find peach', content: 'blah blah'},\n        {id:'3' , title: 'help me find peach', content: 'blah blah'}\n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  \n   switch(action.type){\n     case 'CREATE_PROJECT':\n       console.log(\"created project\",action.project);\n       return state;\n     case 'CREATE_PROJECT_ERROR':\n        console.log('create project eeorr',action.err);\n        return state;    \n      default:\n        return state;   \n   }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\n\nimport projectReducer from \"./projectReducer\";\n\nimport {combineReducers} from \"redux\";\n\nimport {firestoreReducer} from 'redux-firestore';\n\nimport {firebaseReducer} from \"react-redux-firebase\";\n\nconst rootReducer=combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\n\nexport default rootReducer;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAdiyZg4FWG5NDiBSRYaQ7Snd_sqoFibzM\",\n  authDomain: \"akshatmarioplan.firebaseapp.com\",\n  databaseURL: \"https://akshatmarioplan.firebaseio.com\",\n  projectId: \"akshatmarioplan\",\n  storageBucket: \"akshatmarioplan.appspot.com\",\n  messagingSenderId: \"508391323759\",\n  appId: \"1:508391323759:web:2edb0b8b53451bb0aaf59a\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\n\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebase from \"firebase/app\";\nimport fbConfig from \"./config/fbConfig\";\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  config: profileSpecificProps,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}