{"version":3,"sources":["components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedOutLinks","Fragment","Button","color","to","connect","dispatch","signOut","getState","firebase","auth","then","type","props","onClick","className","profile","initials","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","state","classes","links","uid","AppBar","position","Toolbar","Typography","variant","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","createdAt","calendar","console","log","authorFirstName","authorLastName","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","class","CreateProject","handleChange","e","setState","target","value","handleSubmit","preventDefault","createProject","history","push","onSubmit","htmlFor","onChange","getFirebase","getFirestore","authorId","add","firstName","lastName","Date","catch","err","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","newUser","createUserWithEmailAndPassword","resp","doc","set","signUp","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","createFirestoreInstance","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fba9a6a6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <Button color=\"primary\">\n        <Link to=\"/signin\">Sign In</Link>\n      </Button>\n      <Button color=\"primary\">\n        <Link to=\"/signup\">Sign Up</Link>\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nconst SignedInLinks = (props) => {\n  return (\n    <React.Fragment>\n      <Button color=\"primary\">\n        <Link to=\"/create\">New Project</Link>\n      </Button>\n      <Button color=\"primary\">\n        <a onClick={props.signOut}>Log out</a>\n      </Button>\n      <Button>\n        <Link to=\"/\" className=\"btn btn-floating pinklighten-1\">\n          {props.profile.initials}\n        </Link>\n      </Button>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","import firebase from \"firebase\";\n\nexport const signIn = (credentials) => {\n  return (dispatch, getState) => {\n    //const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState) => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport { connect } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    color: \"white\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const classes = useStyles();\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/\">Project Tracker</Link>\n          </Typography>\n          {links}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  //console.log(project);\n  const createdAt = project.createdAt\n    ? moment(project.createdAt.toDate()).calendar()\n    : \"2 sep\";\n  console.log(createdAt);\n  return (\n    <div className=\"card z-depth-0 project-summary \">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">{createdAt}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map((project) => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    //console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications  notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: \"projects\",orderBy:['createdAt','desc']\n    },\n    {\n      collection: \"notifications\", limit: 3,orderBy:['time','desc']\n    },\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nfunction ProjectDetails(props) {\n  const { project, auth } = props;\n  console.log(project);\n  const createdAt = project.createdAt\n    ? moment(project.createdAt.toDate()).calendar()\n    : \"2 sep\";\n\n  if (!auth.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div class=\"card-action grey lighten-4 grey-text\">\n            <div>{project.authorFirstName}</div>\n            <div>{createdAt}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p> project is loading </p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  console.log(state);\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n\n    if (!auth.uid) {\n      return <Redirect to=\"signin\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Project Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              type=\"text\"\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    console.log(this.props);\n    const { authError, auth } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"Password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">\n              Login\n            </button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>Hello wrong</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"Password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}></Route>\n          <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  console.log(action.type);\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login Succesfull\");\n      return {\n        authError: null,\n      };\n    case \"LOGIN_ERROR\":\n      console.log(\"Login Unsuccesfull\");\n      return {\n        authError: \"Login Failed\",\n      };\n\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"sign out success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"sign up success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"sign up error\");\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n    projects:[\n        {id:'1' , title: 'help me find peach', content: 'blah blah'},\n        {id:'2' , title: 'help me find peach', content: 'blah blah'},\n        {id:'3' , title: 'help me find peach', content: 'blah blah'}\n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  \n   switch(action.type){\n     case 'CREATE_PROJECT':\n       console.log(\"created project\",action.project);\n       return state;\n     case 'CREATE_PROJECT_ERROR':\n        console.log('create project eeorr',action.err);\n        return state;    \n      default:\n        return state;   \n   }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\n\nimport projectReducer from \"./projectReducer\";\n\nimport {combineReducers} from \"redux\";\n\nimport {firestoreReducer} from 'redux-firestore';\n\nimport {firebaseReducer} from \"react-redux-firebase\";\n\nconst rootReducer=combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\n\nexport default rootReducer;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAdiyZg4FWG5NDiBSRYaQ7Snd_sqoFibzM\",\n  authDomain: \"akshatmarioplan.firebaseapp.com\",\n  databaseURL: \"https://akshatmarioplan.firebaseio.com\",\n  projectId: \"akshatmarioplan\",\n  storageBucket: \"akshatmarioplan.appspot.com\",\n  messagingSenderId: \"508391323759\",\n  appId: \"1:508391323759:web:2edb0b8b53451bb0aaf59a\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\n\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebase from \"firebase/app\";\nimport fbConfig from \"./config/fbConfig\";\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  config: profileSpecificProps,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}